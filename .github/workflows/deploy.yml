name: Build and Deploy API

on:
  pull_request:
    types: [closed]
    branches: [master]
  workflow_dispatch:

# Evita execuções duplicadas simultâneas na mesma ref
concurrency:
  group: corretorapi-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-deploy:
    if: github.event_name == 'workflow_dispatch' || (github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'master' && github.event.pull_request.head.ref == 'develop')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Restore
        run: dotnet restore MeuCorretorApi.sln

      - name: Build
        run: dotnet build MeuCorretorApi.sln --configuration Release --no-restore

      - name: Publish
        run: dotnet publish MeuCorretorApi/MeuCorretorApi.csproj -c Release -o publish --no-build

      - name: Validar e classificar secrets
        id: validate-secrets
        run: |
          hasPublishProfile="false"
          hasSp="false"
          if [ -n "${AZURE_WEBAPP_PUBLISH_PROFILE}" ]; then
            hasPublishProfile="true"
          fi
          if [ -n "${AZURE_CREDENTIALS}" ]; then
            hasSp="true"
          fi
          if [ -z "${AZURE_WEBAPP_NAME}" ]; then
            echo 'ERRO: Secret AZURE_WEBAPP_NAME não configurado.'
            exit 1
          fi
          if [ "$hasPublishProfile" = "false" ] && [ "$hasSp" = "false" ]; then
            echo 'ERRO: Configure pelo menos AZURE_WEBAPP_PUBLISH_PROFILE ou AZURE_CREDENTIALS.'
            exit 1
          fi
          echo "hasPublishProfile=$hasPublishProfile" >> $GITHUB_OUTPUT
          echo "hasServicePrincipal=$hasSp" >> $GITHUB_OUTPUT
        env:
          AZURE_WEBAPP_PUBLISH_PROFILE: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
          AZURE_WEBAPP_NAME: ${{ secrets.AZURE_WEBAPP_NAME }}

      - name: Azure Login (Service Principal)
        if: steps.validate-secrets.outputs.hasServicePrincipal == 'true' && steps.validate-secrets.outputs.hasPublishProfile == 'false'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy via Publish Profile
        if: steps.validate-secrets.outputs.hasPublishProfile == 'true'
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ secrets.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: publish

      - name: Deploy via Service Principal (fallback)
        if: steps.validate-secrets.outputs.hasPublishProfile == 'false' && steps.validate-secrets.outputs.hasServicePrincipal == 'true'
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ secrets.AZURE_WEBAPP_NAME }}
          package: publish

      - name: Post Subscription Disabled Warning
        if: failure()
        run: |
          echo 'Falha no deploy. Se código 409: assinatura Azure desabilitada ou sem permissão. Verifique billing e SP.'
